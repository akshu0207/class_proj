string ls_columns, ls_filter, ls_layout, ls_sql, ls_presentation, ls_dwsyntax, ls_errors
long ll_rows

// 1. Get user inputs
ls_columns = TRIM(sle_columns.Text)     // e.g., "customer_id, customer_name"
ls_filter  = TRIM(sle_filter.Text)      // e.g., "city = 'New York'"
ls_layout  = Lower(TRIM(sle_layout.Text)) // e.g., "grid", "tabular", "freeform"

// 2. Validate columns
IF ls_columns = "" THEN
    MessageBox("Error", "Please enter column names.")
    RETURN
END IF

// 3. Set default layout if none entered
IF ls_layout = "" THEN
    ls_layout = "grid"
END IF

// 4. Build SQL
ls_sql = "SELECT " + ls_columns + " FROM customers"
IF ls_filter <> "" THEN
    ls_sql += " WHERE " + ls_filter
END IF
ls_sql += " ORDER BY 1"

// 5. Create presentation layout string
ls_presentation = "style(type=" + ls_layout + ")"

// 6. Generate DataWindow syntax
ls_dwsyntax = SQLCA.SyntaxFromSQL(ls_sql, ls_presentation, ls_errors)

IF Len(ls_errors) > 0 OR ls_dwsyntax = "" THEN
    MessageBox("Syntax Error", ls_errors)
    RETURN
END IF

// 7. Create and retrieve
dw_master.Reset()
IF dw_master.Create(ls_dwsyntax, ls_errors) <> 1 THEN
    MessageBox("Create Error", ls_errors)
    RETURN
END IF

dw_master.SetTransObject(SQLCA)
ll_rows = dw_master.Retrieve()

IF ll_rows < 0 THEN
    MessageBox("Retrieve Error", "Failed to retrieve data.")
ELSEIF ll_rows = 0 THEN
    MessageBox("Notice", "No data found.")
ELSE
    MessageBox("Success", "Report generated successfully.")
END IF
