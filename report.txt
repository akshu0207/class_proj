string ls_table, ls_columns, ls_where, ls_sql, ls_dwsyntax
string ls_error
integer li_rtn

// 1. Get user inputs
ls_table   = Trim(sle_table.Text)
ls_columns = Trim(sle_columns.Text)
ls_where   = Trim(sle_where.Text)

// 2. Validate required inputs
IF ls_table = "" THEN
    MessageBox("Error", "Please enter a table name.")
    RETURN
END IF

IF ls_columns = "" THEN
    ls_columns = "*" // Default to all columns
END IF

// 3. Build SQL query
ls_sql = "SELECT " + ls_columns + " FROM " + ls_table

IF ls_where <> "" THEN
    ls_sql += " WHERE " + ls_where
END IF

// 4. Default layout: Grid
string ls_layout
ls_layout = "style(type=grid)"

// 5. Generate DataWindow syntax
ls_dwsyntax = SQLCA.SyntaxFromSQL(ls_sql, ls_layout, ls_table, li_rtn)

IF li_rtn <> 1 OR ls_dwsyntax = "" THEN
    MessageBox("Error", "Failed to generate DataWindow syntax. Check table, columns, or where clause.")
    RETURN
END IF

// 6. Create and retrieve data in report DataWindow
IF dw_report.Create(ls_dwsyntax, ls_sql, SQLCA) <> 1 THEN
    MessageBox("Error", "Failed to create report.")
    RETURN
END IF

dw_report.SetTransObject(SQLCA)

IF dw_report.Retrieve() < 0 THEN
    MessageBox("Error", "Failed to retrieve data.")
    RETURN
END IF

MessageBox("Success", "Report generated successfully!")
